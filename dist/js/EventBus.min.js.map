{"version":3,"sources":["module.js","EventBus.js"],"names":[],"mappings":"CAAA,WAAA,YAAA,SAAA,OAAA,kBCAA,WAAA,YAMA,SAAA,OAAA,YACA,QAAA,YAAA,aAAA,SAAA,GACA,GAAA,IACA,UAAA,KACA,GAAA,KAeA,OAXA,GAAA,UAAA,SAAA,EAAA,GACA,EAAA,MAAA,EAAA,IAIA,EAAA,GAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,IAAA,EAAA,EAEA,IAAA,EAAA,KAAA,EAAA,IAAA,WAAA,IAGA","file":"EventBus.min.js","sourcesContent":["angular.module('eventBus', []);","/**\r\n * Small convenience wrapper around Angular's $rootScope event bus functionality.\r\n *\r\n * Adds support for propagating events on only the root scope while still\r\n * deregistering the listener when its scope is destroyed.\r\n */\r\nangular.module('eventBus')\r\n  .factory('EventBus', ['$rootScope', function ($rootScope) {\r\n    var EventBus = {\r\n      broadcast: null,\r\n      on: null\r\n    };\r\n\r\n    // publish a message to a topic\r\n    EventBus.broadcast = function (topic, message) {\r\n      $rootScope.$emit(topic, message);\r\n    };\r\n\r\n    // subscribe to a topic\r\n    EventBus.on = function (topic, handler, scope) {\r\n      var unregister = $rootScope.$on(topic, handler);\r\n\r\n      if (scope && scope.$on) scope.$on('$destroy', unregister);\r\n    };\r\n\r\n    return EventBus;\r\n  }]);"],"sourceRoot":"/source/"}